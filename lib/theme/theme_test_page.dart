import 'package:flutter/material.dart';

class ThemeTestPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
          body: ListView(children:<Widget>[

        Container(width: .0, height: 100.0, color: Theme.of(context).accentColor, child: Text('accentColor') ,),
        Padding(padding: EdgeInsets.all(50.0)),
        Container(width: .0, height: 100.0, color: Theme.of(context).backgroundColor, child: Text('backgroundColor') ,),
        Padding(padding: EdgeInsets.all(50.0)),
        Container(width: .0, height: 100.0, color: Theme.of(context).bottomAppBarColor, child: Text('bottomAppBarColor') ,),
        Padding(padding: EdgeInsets.all(50.0)),
        Container(width: .0, height: 100.0, color: Theme.of(context).buttonColor, child: Text('buttonColor') ,),
        Padding(padding: EdgeInsets.all(50.0)),
        Container(width: .0, height: 100.0, color: Theme.of(context).canvasColor, child: Text('canvasColor') ,),
        Padding(padding: EdgeInsets.all(50.0)),
        Text('cardColor'), 
        Container(width: .0, height: 100.0, color: Theme.of(context).cardColor, child: Text('cardColor') , ),
        Padding(padding: EdgeInsets.all(50.0)),
        Text('cursorColor'),
        Container(width: .0, height: 100.0, color: Theme.of(context).cursorColor, child: Text('cursorColor') ,),
        Padding(padding: EdgeInsets.all(50.0)),
        Container(width: .0, height: 100.0, color: Theme.of(context).dialogBackgroundColor, child: Text('dialogBackgroundColor') ,),
        Padding(padding: EdgeInsets.all(50.0)),
        Container(width: .0, height: 100.0, color: Theme.of(context).disabledColor, child: Text('disabledColor') ,),
        Padding(padding: EdgeInsets.all(50.0)),
        Container(width: .0, height: 100.0, color: Theme.of(context).dividerColor, child: Text('dividerColor') ,),
        Padding(padding: EdgeInsets.all(50.0)),
        Container(width: .0, height: 100.0, color: Theme.of(context).errorColor, child: Text('errorColor') ,),
        Padding(padding: EdgeInsets.all(50.0)),
        Container(width: .0, height: 100.0, color: Theme.of(context).highlightColor, child: Text('highlightColor') ,),
        Padding(padding: EdgeInsets.all(50.0)),
        Container(width: .0, height: 100.0, color: Theme.of(context).hintColor, child: Text('hintColor') ,),
        Padding(padding: EdgeInsets.all(50.0)),
        Container(width: .0, height: 100.0, color: Theme.of(context).indicatorColor, child: Text('indicatorColor') ,),
        Padding(padding: EdgeInsets.all(50.0)),
        Container(width: .0, height: 100.0, color: Theme.of(context).primaryColor, child: Text('primaryColor') ,),
        Padding(padding: EdgeInsets.all(50.0)),
        Container(width: .0, height: 100.0, color: Theme.of(context).primaryColorDark, child: Text('primaryColorDark') ,),
        Padding(padding: EdgeInsets.all(50.0)),
        Container(width: .0, height: 100.0, color: Theme.of(context).primaryColorLight, child: Text('primaryColorLight') ,),
        Padding(padding: EdgeInsets.all(50.0)),
        Container(width: .0, height: 100.0, color: Theme.of(context).scaffoldBackgroundColor, child: Text('scaffoldBackgroundColor') ,),
        Padding(padding: EdgeInsets.all(50.0)),
        Container(width: .0, height: 100.0, color: Theme.of(context).secondaryHeaderColor, child: Text('secondaryHeaderColor') ,),
        Padding(padding: EdgeInsets.all(50.0)),
        Container(width: .0, height: 100.0, color: Theme.of(context).selectedRowColor, child: Text('selectedRowColor') ,),
        Padding(padding: EdgeInsets.all(50.0)),
        Container(width: .0, height: 100.0, color: Theme.of(context).splashColor, child: Text('splashColor') ,),
        Padding(padding: EdgeInsets.all(50.0)),
        Container(width: .0, height: 100.0, color: Theme.of(context).textSelectionColor, child: Text('textSelectionColor') ,),
        Padding(padding: EdgeInsets.all(50.0)),
        Container(width: .0, height: 100.0, color: Theme.of(context).textSelectionHandleColor, child: Text('textSelectionHandleColor') ,),  
        Padding(padding: EdgeInsets.all(50.0)),
        Container(width: .0, height: 100.0, color: Theme.of(context).toggleableActiveColor, child: Text('toggleableActiveColor') ,),
        Padding(padding: EdgeInsets.all(50.0)),
        Container(width: .0, height: 100.0, color: Theme.of(context).unselectedWidgetColor, child: Text('unselectedWidgetColor') ,),
        
        Padding(padding: EdgeInsets.all(50.0)),
        Padding(padding: EdgeInsets.all(50.0)),Text('Texts', style: Theme.of(context).textTheme.display4),
        Padding(padding: EdgeInsets.all(50.0)),
        Padding(padding: EdgeInsets.all(50.0)),Text('body1', style: Theme.of(context).textTheme.body1),
        Padding(padding: EdgeInsets.all(50.0)),Text('body2', style: Theme.of(context).textTheme.body2),
        Padding(padding: EdgeInsets.all(50.0)),Text('button', style: Theme.of(context).textTheme.button),
        Padding(padding: EdgeInsets.all(50.0)),Text('caption', style: Theme.of(context).textTheme.caption),
        Padding(padding: EdgeInsets.all(50.0)),Text('display1', style: Theme.of(context).textTheme.display1),
        Padding(padding: EdgeInsets.all(50.0)),Text('display2', style: Theme.of(context).textTheme.display2),
        Padding(padding: EdgeInsets.all(50.0)),Text('display3', style: Theme.of(context).textTheme.display3),
        Padding(padding: EdgeInsets.all(50.0)),Text('display4', style: Theme.of(context).textTheme.display4),
        Padding(padding: EdgeInsets.all(50.0)),Text('headline', style: Theme.of(context).textTheme.headline),
        Padding(padding: EdgeInsets.all(50.0)),Text('overline', style: Theme.of(context).textTheme.overline),
        Padding(padding: EdgeInsets.all(50.0)),Text('subhead', style: Theme.of(context).textTheme.subhead),
        Padding(padding: EdgeInsets.all(50.0)),Text('subtitle', style: Theme.of(context).textTheme.subtitle),
        Padding(padding: EdgeInsets.all(50.0)),Text('title', style: Theme.of(context).textTheme.title),
      
      ]
      ),
    ); 
  }
}